{"ast":null,"code":"var _jsxFileName = \"/Users/emrahcercioglu/>DEMO/missile-tracker/frontend/src/components/Map/MissileTrajectory.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Polyline, Circle } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MissileTrajectory = ({\n  missile,\n  isSelected\n}) => {\n  _s();\n  const [trajectoryPoints, setTrajectoryPoints] = useState([]);\n  const [currentPosition, setCurrentPosition] = useState(null);\n  useEffect(() => {\n    const points = [];\n\n    // Add origin point\n    if (missile.origin) {\n      points.push([missile.origin.lat, missile.origin.lng]);\n    }\n\n    // Add trajectory points if available\n    if (missile.trajectory && Array.isArray(missile.trajectory)) {\n      missile.trajectory.forEach(point => {\n        if (point.lat && point.lng) {\n          points.push([point.lat, point.lng]);\n        }\n      });\n    }\n\n    // Add current position if different from last trajectory point\n    if (missile.current_position) {\n      const currentPos = [missile.current_position.lat, missile.current_position.lng];\n      const lastPoint = points[points.length - 1];\n      if (!lastPoint || Math.abs(lastPoint[0] - currentPos[0]) > 0.001 || Math.abs(lastPoint[1] - currentPos[1]) > 0.001) {\n        points.push(currentPos);\n      }\n      setCurrentPosition(currentPos);\n    }\n\n    // Add target point for completed trajectories\n    if (missile.target && ['impact', 'intercepted'].includes(missile.status)) {\n      points.push([missile.target.lat, missile.target.lng]);\n    }\n    setTrajectoryPoints(points);\n  }, [missile]);\n  if (trajectoryPoints.length < 2) return null;\n\n  // Color based on threat level and status\n  const getTrajectoryColor = () => {\n    if (missile.status === 'intercepted') return '#22c55e'; // Green\n    if (missile.status === 'impact') return '#dc2626'; // Dark red\n    if (missile.status === 'failed') return '#6b7280'; // Gray\n\n    // Active missiles - color by threat level\n    switch (missile.threat_level) {\n      case 'critical':\n        return '#ef4444';\n      // Red\n      case 'high':\n        return '#f97316';\n      // Orange\n      case 'medium':\n        return '#eab308';\n      // Yellow\n      case 'low':\n        return '#22c55e';\n      // Green\n      default:\n        return '#6b7280';\n      // Gray\n    }\n  };\n  const getLineStyle = () => {\n    const baseStyle = {\n      weight: isSelected ? 4 : 2,\n      opacity: isSelected ? 0.9 : 0.7,\n      color: getTrajectoryColor()\n    };\n\n    // Dashed line for predicted trajectory\n    if (['launched', 'in-flight'].includes(missile.status)) {\n      return {\n        ...baseStyle,\n        dashArray: '5, 10'\n      };\n    }\n    return baseStyle;\n  };\n  const getCurrentPositionStyle = () => {\n    return {\n      color: getTrajectoryColor(),\n      fillColor: getTrajectoryColor(),\n      fillOpacity: 0.6,\n      weight: 2,\n      radius: isSelected ? 8 : 5\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Polyline, {\n      positions: trajectoryPoints,\n      pathOptions: getLineStyle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), currentPosition && ['launched', 'in-flight'].includes(missile.status) && /*#__PURE__*/_jsxDEV(Circle, {\n      center: currentPosition,\n      pathOptions: getCurrentPositionStyle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), missile.target && ['impact', 'intercepted'].includes(missile.status) && /*#__PURE__*/_jsxDEV(Circle, {\n      center: [missile.target.lat, missile.target.lng],\n      pathOptions: {\n        color: missile.status === 'intercepted' ? '#22c55e' : '#dc2626',\n        fillColor: missile.status === 'intercepted' ? '#22c55e' : '#dc2626',\n        fillOpacity: 0.3,\n        weight: 2,\n        radius: 1000 // 1km radius\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MissileTrajectory, \"2Tq7egX1oWnSeUbgRoqjo86MHoM=\");\n_c = MissileTrajectory;\nexport default MissileTrajectory;\nvar _c;\n$RefreshReg$(_c, \"MissileTrajectory\");","map":{"version":3,"names":["React","useEffect","useState","Polyline","Circle","jsxDEV","_jsxDEV","Fragment","_Fragment","MissileTrajectory","missile","isSelected","_s","trajectoryPoints","setTrajectoryPoints","currentPosition","setCurrentPosition","points","origin","push","lat","lng","trajectory","Array","isArray","forEach","point","current_position","currentPos","lastPoint","length","Math","abs","target","includes","status","getTrajectoryColor","threat_level","getLineStyle","baseStyle","weight","opacity","color","dashArray","getCurrentPositionStyle","fillColor","fillOpacity","radius","children","positions","pathOptions","fileName","_jsxFileName","lineNumber","columnNumber","center","_c","$RefreshReg$"],"sources":["/Users/emrahcercioglu/>DEMO/missile-tracker/frontend/src/components/Map/MissileTrajectory.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Polyline, Circle } from 'react-leaflet';\n\nconst MissileTrajectory = ({ missile, isSelected }) => {\n  const [trajectoryPoints, setTrajectoryPoints] = useState([]);\n  const [currentPosition, setCurrentPosition] = useState(null);\n\n  useEffect(() => {\n    const points = [];\n    \n    // Add origin point\n    if (missile.origin) {\n      points.push([missile.origin.lat, missile.origin.lng]);\n    }\n\n    // Add trajectory points if available\n    if (missile.trajectory && Array.isArray(missile.trajectory)) {\n      missile.trajectory.forEach(point => {\n        if (point.lat && point.lng) {\n          points.push([point.lat, point.lng]);\n        }\n      });\n    }\n\n    // Add current position if different from last trajectory point\n    if (missile.current_position) {\n      const currentPos = [missile.current_position.lat, missile.current_position.lng];\n      const lastPoint = points[points.length - 1];\n      \n      if (!lastPoint || \n          Math.abs(lastPoint[0] - currentPos[0]) > 0.001 || \n          Math.abs(lastPoint[1] - currentPos[1]) > 0.001) {\n        points.push(currentPos);\n      }\n      \n      setCurrentPosition(currentPos);\n    }\n\n    // Add target point for completed trajectories\n    if (missile.target && ['impact', 'intercepted'].includes(missile.status)) {\n      points.push([missile.target.lat, missile.target.lng]);\n    }\n\n    setTrajectoryPoints(points);\n  }, [missile]);\n\n  if (trajectoryPoints.length < 2) return null;\n\n  // Color based on threat level and status\n  const getTrajectoryColor = () => {\n    if (missile.status === 'intercepted') return '#22c55e'; // Green\n    if (missile.status === 'impact') return '#dc2626'; // Dark red\n    if (missile.status === 'failed') return '#6b7280'; // Gray\n    \n    // Active missiles - color by threat level\n    switch (missile.threat_level) {\n      case 'critical': return '#ef4444'; // Red\n      case 'high': return '#f97316'; // Orange\n      case 'medium': return '#eab308'; // Yellow\n      case 'low': return '#22c55e'; // Green\n      default: return '#6b7280'; // Gray\n    }\n  };\n\n  const getLineStyle = () => {\n    const baseStyle = {\n      weight: isSelected ? 4 : 2,\n      opacity: isSelected ? 0.9 : 0.7,\n      color: getTrajectoryColor()\n    };\n\n    // Dashed line for predicted trajectory\n    if (['launched', 'in-flight'].includes(missile.status)) {\n      return {\n        ...baseStyle,\n        dashArray: '5, 10'\n      };\n    }\n\n    return baseStyle;\n  };\n\n  const getCurrentPositionStyle = () => {\n    return {\n      color: getTrajectoryColor(),\n      fillColor: getTrajectoryColor(),\n      fillOpacity: 0.6,\n      weight: 2,\n      radius: isSelected ? 8 : 5\n    };\n  };\n\n  return (\n    <>\n      {/* Trajectory line */}\n      <Polyline\n        positions={trajectoryPoints}\n        pathOptions={getLineStyle()}\n      />\n\n      {/* Current position indicator for active missiles */}\n      {currentPosition && ['launched', 'in-flight'].includes(missile.status) && (\n        <Circle\n          center={currentPosition}\n          pathOptions={getCurrentPositionStyle()}\n        />\n      )}\n\n      {/* Impact/Interception point */}\n      {missile.target && ['impact', 'intercepted'].includes(missile.status) && (\n        <Circle\n          center={[missile.target.lat, missile.target.lng]}\n          pathOptions={{\n            color: missile.status === 'intercepted' ? '#22c55e' : '#dc2626',\n            fillColor: missile.status === 'intercepted' ? '#22c55e' : '#dc2626',\n            fillOpacity: 0.3,\n            weight: 2,\n            radius: 1000 // 1km radius\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MissileTrajectory;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}